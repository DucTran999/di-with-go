// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"DucTran999/di-with-go/internal/handler"
	"DucTran999/di-with-go/internal/repository"
	"DucTran999/di-with-go/internal/router"
	"DucTran999/di-with-go/internal/usecase"
	"github.com/gin-gonic/gin"
)

// Injectors from wire.go:

func InitApp() *App {
	userRepositoryImpl := repository.NewUserRepository()
	userUseCaseImpl := usecase.NewUserUseCase(userRepositoryImpl)
	userHandler := handler.NewUserHandler(userUseCaseImpl)
	engine := router.SetupRoutes(userHandler)
	app := NewApp(engine)
	return app
}

// wire.go:

type App struct {
	router *gin.Engine
}

func NewApp(router2 *gin.Engine) *App {
	return &App{
		router: router2,
	}
}
